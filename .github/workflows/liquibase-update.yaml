# CI/CD 파이프라인에서 데이터베이스 마이그레이션을 수행하는 이유:
# - R2DBC만을 사용하는 애플리케이션 코드에서는 데이터베이스 변경 작업에 JDBC 의존성을 추가하지 않기 위함입니다.
# - 데이터베이스 스키마 변경은 Github Actions 를 통해 관리되며, 배포 시점에 파이프라인에서 자동으로 실행됩니다.
#
# 이 설정을 통해:
# 1. 코드 내에서 JDBC 의존성을 제거하여 애플리케이션의 가벼움을 유지합니다.
# 2. 데이터베이스 변경 작업을 파이프라인에서 자동화하여 일관성과 안정성을 확보합니다.
#
# 배포 시 데이터베이스 변경 사항이 자동으로 적용됩니다.

name: Liquibase Update

on:
  push:
    branches:
      - master

jobs:
  update_database:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository code
        uses: actions/checkout@v4

      - name: Liquibase Update
        uses: liquibase-github-actions/update@v4.30.0
        with:
          changelogFile: src/main/resources/db/changelog/db.changelog-master.yaml
          url: jdbc:postgresql://${{ secrets.MASTER_DB_URL }}
          username: ${{ secrets.MASTER_DB_USERNAME }}
          password: ${{ secrets.MASTER_DB_PASSWORD }}
          logLevel: INFO